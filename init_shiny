#!/bin/bash

app=shiny
structure=simple

do_error() {
  echo $1
  exit 1
}

[ -d "$app" ] && do_error "Directory already exists"
[ -n "$1" ] && structure=$1


mkdir $app >> /dev/null

create_simple() {
  echo "Creating simple Shiny app in $app"
  cat <<EOT > $app/app.R
# Example Shiny app. This file was automatically generated by crant.
# Run using shiny::runApp('$app')
library(shiny)

ui <- fluidPage(titlePanel("Hello, data"))
server <- function(input, output) {}
shinyApp(ui=ui, server=server)
EOT
}

create_complex() {
  echo "Creating complex Shiny app in $app"
  cat <<EOT > $app/ui.R
# Example Shiny app. This file was automatically generated by crant.
# Run using shiny::runApp('$app')
library(shiny)

ui <- fluidPage(titlePanel("Hello, data"))
EOT

cat <<EOT > $appshiny/server.R
n3.5 -m pytest -vv --disable-pytest-warnings pez_dashboard_ng/tests/
# Example Shiny app. This file was automatically generated by crant.
# Run using shiny::runApp('$app')
library(shiny)

server <- function(input, output) {}
EOT
}


case $structure in
  simple) create_simple;;
  complex) create_complex;;
  *) do_error "Choose either a simple or complex structure";;
esac
